
experiment5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000008e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000000e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000090  00000000  00000000  000007b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000840  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000009c  00000000  00000000  0000087b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000006c  00000000  00000000  00000917  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000133  00000000  00000000  00000983  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000ab8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000b5  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  00000b8d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 45 00 	jmp	0x8a	; 0x8a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <avr/delay.h>

int main(void)
{
	DDRA = 0XFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0XFF;
  70:	87 bb       	out	0x17, r24	; 23
	DDRC = 0XFF;
  72:	84 bb       	out	0x14, r24	; 20
	DDRD = 0XFF;
  74:	81 bb       	out	0x11, r24	; 17
	unsigned char Data_in1 = 0X32;
	unsigned char Data_in2 = 0XAB;
	PORTA =~ PORTA;
  76:	8b b3       	in	r24, 0x1b	; 27
  78:	80 95       	com	r24
  7a:	8b bb       	out	0x1b, r24	; 27
	PORTB = Data_in1 | Data_in2;
  7c:	8b eb       	ldi	r24, 0xBB	; 187
  7e:	88 bb       	out	0x18, r24	; 24
	PORTC = Data_in1 & Data_in2;
  80:	82 e2       	ldi	r24, 0x22	; 34
  82:	85 bb       	out	0x15, r24	; 21
	PORTD = Data_in1 ^ Data_in2;
  84:	89 e9       	ldi	r24, 0x99	; 153
  86:	82 bb       	out	0x12, r24	; 18
  88:	ff cf       	rjmp	.-2      	; 0x88 <main+0x1c>

0000008a <_exit>:
  8a:	f8 94       	cli

0000008c <__stop_program>:
  8c:	ff cf       	rjmp	.-2      	; 0x8c <__stop_program>
