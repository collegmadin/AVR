
Eperiment 9.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000124  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000090  00000000  00000000  000007f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000880  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000043  00000000  00000000  000008a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000021a  00000000  00000000  000008e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000011b  00000000  00000000  00000afd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000278  00000000  00000000  00000c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00000e90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000129  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003e  00000000  00000000  00000ff9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000038  00000000  00000000  00001037  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4e 00 	call	0x9c	; 0x9c <main>
  64:	0c 94 66 00 	jmp	0xcc	; 0xcc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <send_a_command>:
	send_a_command(0x0e);
	send_a_character(0x41);
}

void send_a_command(unsigned char command) {
	PORTA = command;
  6c:	8b bb       	out	0x1b, r24	; 27
	PORTD &= ~(1 << RS);
  6e:	96 98       	cbi	0x12, 6	; 18
	PORTD |= (1 << E);
  70:	95 9a       	sbi	0x12, 5	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  72:	83 ed       	ldi	r24, 0xD3	; 211
  74:	90 e3       	ldi	r25, 0x30	; 48
  76:	01 97       	sbiw	r24, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <send_a_command+0xa>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <send_a_command+0x10>
  7c:	00 00       	nop
	_delay_ms(50);
	PORTD &= ~(1 << E);
  7e:	95 98       	cbi	0x12, 5	; 18
	PORTA = 0;
  80:	1b ba       	out	0x1b, r1	; 27
}
  82:	08 95       	ret

00000084 <send_a_character>:

void send_a_character(unsigned char character) {
	PORTA = character;
  84:	8b bb       	out	0x1b, r24	; 27
	PORTD |= (1 << RS);
  86:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= (1 << E);
  88:	95 9a       	sbi	0x12, 5	; 18
  8a:	83 ed       	ldi	r24, 0xD3	; 211
  8c:	90 e3       	ldi	r25, 0x30	; 48
  8e:	01 97       	sbiw	r24, 0x01	; 1
  90:	f1 f7       	brne	.-4      	; 0x8e <send_a_character+0xa>
  92:	00 c0       	rjmp	.+0      	; 0x94 <send_a_character+0x10>
  94:	00 00       	nop
	_delay_ms(50);
	PORTD &= ~(1 << E);
  96:	95 98       	cbi	0x12, 5	; 18
	PORTA = 0;
  98:	1b ba       	out	0x1b, r1	; 27
  9a:	08 95       	ret

0000009c <main>:

void send_a_command(unsigned char command);
void send_a_character(unsigned char character);

int main(void) {
	DDRA = 0xff;
  9c:	8f ef       	ldi	r24, 0xFF	; 255
  9e:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0xff;
  a0:	81 bb       	out	0x11, r24	; 17
  a2:	83 ed       	ldi	r24, 0xD3	; 211
  a4:	90 e3       	ldi	r25, 0x30	; 48
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0xa>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x10>
  ac:	00 00       	nop
	_delay_ms(50);
	send_a_command(0x01);
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	0e 94 36 00 	call	0x6c	; 0x6c <send_a_command>
	send_a_command(0x38);
  b4:	88 e3       	ldi	r24, 0x38	; 56
  b6:	0e 94 36 00 	call	0x6c	; 0x6c <send_a_command>
	send_a_command(0x0e);
  ba:	8e e0       	ldi	r24, 0x0E	; 14
  bc:	0e 94 36 00 	call	0x6c	; 0x6c <send_a_command>
	send_a_character(0x41);
  c0:	81 e4       	ldi	r24, 0x41	; 65
  c2:	0e 94 42 00 	call	0x84	; 0x84 <send_a_character>
}
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	08 95       	ret

000000cc <_exit>:
  cc:	f8 94       	cli

000000ce <__stop_program>:
  ce:	ff cf       	rjmp	.-2      	; 0xce <__stop_program>
