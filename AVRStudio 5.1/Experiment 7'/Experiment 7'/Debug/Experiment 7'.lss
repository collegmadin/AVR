
Experiment 7'.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000000f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000090  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  00000870  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000017e  00000000  00000000  0000088b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000122  00000000  00000000  00000a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f2  00000000  00000000  00000b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000d20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000011f  00000000  00000000  00000d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000052  00000000  00000000  00000e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000038  00000000  00000000  00000eb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
{
	unsigned char conbyte = 0x44;
	unsigned char regalsb;
	unsigned char x;
	regalsb = conbyte;
	DDRC |= (1<<pin);
  6c:	a3 9a       	sbi	0x14, 3	; 20
  6e:	88 e0       	ldi	r24, 0x08	; 8
int main(void)
{
	unsigned char conbyte = 0x44;
	unsigned char regalsb;
	unsigned char x;
	regalsb = conbyte;
  70:	94 e4       	ldi	r25, 0x44	; 68
	DDRC |= (1<<pin);
	for (x = 0; x < 8; x++)
	{
		if (regalsb & 0x01)
  72:	90 ff       	sbrs	r25, 0
  74:	02 c0       	rjmp	.+4      	; 0x7a <main+0xe>
		{
			PORTC |= (1<<pin);
  76:	ab 9a       	sbi	0x15, 3	; 21
  78:	01 c0       	rjmp	.+2      	; 0x7c <main+0x10>
		}else{
			PORTC &= ~(1<<pin);
  7a:	ab 98       	cbi	0x15, 3	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7c:	2f e3       	ldi	r18, 0x3F	; 63
  7e:	3d e0       	ldi	r19, 0x0D	; 13
  80:	43 e0       	ldi	r20, 0x03	; 3
  82:	21 50       	subi	r18, 0x01	; 1
  84:	30 40       	sbci	r19, 0x00	; 0
  86:	40 40       	sbci	r20, 0x00	; 0
  88:	e1 f7       	brne	.-8      	; 0x82 <main+0x16>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <main+0x20>
  8c:	00 00       	nop
  8e:	81 50       	subi	r24, 0x01	; 1
	unsigned char conbyte = 0x44;
	unsigned char regalsb;
	unsigned char x;
	regalsb = conbyte;
	DDRC |= (1<<pin);
	for (x = 0; x < 8; x++)
  90:	11 f0       	breq	.+4      	; 0x96 <main+0x2a>
			PORTC |= (1<<pin);
		}else{
			PORTC &= ~(1<<pin);
		}
		_delay_ms(1000);
		regalsb = regalsb >> 1;
  92:	96 95       	lsr	r25
  94:	ee cf       	rjmp	.-36     	; 0x72 <main+0x6>
	}
	return 0;
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	08 95       	ret

0000009c <_exit>:
  9c:	f8 94       	cli

0000009e <__stop_program>:
  9e:	ff cf       	rjmp	.-2      	; 0x9e <__stop_program>
